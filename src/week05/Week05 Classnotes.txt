
loops: for loop, while loop, do while loop, nested loop
branching statements

________________________________________________________________
loops

    Loops are used to repeat statements
        You can define some action/code that you want to execute repeatedly

    iteration: each cycle of the code, each time the statements execute

    infinite loop: a loop that continues to execute without stopping. A loop will be infinite if the boolean expression is always true and never changes to false

	- for loop: loop that is used when there is a fixed number of iterations

        for(initialization; boolean expression; update){
            // statements
        }

        flow:
        	1) initialization
        	2) boolean is checked: true = loop runs, false = loop stops
        	3) statements are run
        	4) update
        	one iteration finished, now it repeats from steps 2-4

	- while loop: loop that is used when the the number of iterations is not known and based on a boolean expression

        while(boolean_expression){
            // statements
        }

        flow:
           	1) boolean is checked: true = loop runs, false = loop stops
           	2) statements are run
           	one iteration finished, now it repeats from step 1


	- do while loop: similar to the while loop but the first iteration/execution is always run at least one time and then the boolean value is checked

	    do{
	        // statements
	    } while(boolean_expression);

        flow:
        	1) statements are run
            2) boolean is checked: true = loop runs, false = loop stops

nested loop: loop inside a loop

		- the nested loop can be any loop type, but we commonly use for loop
			for(int i = 0; i < 5; i++){
				for(int j=0; j < 2; j++){
					System.out.println(i + " " + j);
				}
			}

			The outer loop ( first loop using the i variable ) will execute for a total of 5 iterations

			The inner loop ( second loop using the j variable ) will execute for a total of 10.
				-> for each iteration of the outer loop the inner loop starts from the beginning and executes until the end

________________________________________________________________

branching statements

    break statement in loop:
        stops and exits the loop

    continue statement in loop:
        it will skip the rest of the iteration and goes to the update part
        any code after continue will not run for that iteration

	return: stops the method
________________________________________________________________
