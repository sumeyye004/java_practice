
__________________

class & object

	What is a class?
	    a template/blueprint for objects
	    classes are made in java files
	    the public classes should match the java file name

	What is an object?
	    instances of the class, so it has access to the instance variables/methods

	How to create an object?
	    ClassName referenceName = new ClassName();
	    Student student = new Student();

	    instantiation: creating an object
	        in-stan-shi-a-tion

	Class -> data
		  -> behaviour

	Class -> attributes
		  -> methods

	Class -> fields/instance variables
		  -> methods

	Class -> members

	What is an instance variable?
	    variables defined in a class. There variables belong to each object of the class
	    Every object has its own copy of instance variables

	Q: What is the difference between instance variables and local variables
			instance variables are defined in a class and accessed from the object of that class
			local variables are defined in a block of code and only accessible in that block

toString
	this method is called automatically when you print an object

	if you generate: DONT WORRY ABOUT @OVERRIDE RIGHT NOW - we will learn more about this later
_______________________________________________________________



Memory

	JVM will allocate memory automatically when a program is run

	stack: holds method frames, local variables, references

	heap: holds objects, String pool

	null: no object, a placeholder when there is no value

	GC: garbage collector is used to clean up the memory. When run it removes any object that are not referenced

__________________________________________________________________

package & import

	imports allow us to use class/files that are in different packages

	order of a java file:
		-> imports go between the package and class
			PIC: package, import, class

	the java.lang package is automatically imported
		String, System

	import packageName.className

	import packageName.*; // allows you to use all of the class in that package
		* -> wildcard -> all classes
__________________________________________________________________

Scanner

	Scanner is a class that has methods that allow us to read information from the console

	why to use Scanner
		to avoid hard coding
			hard coding: the value is fixed in the code

	how to use Scanner:

		1) import the class
			Scanner is a class in the java.util package so we can import it from there to use it
				import java.util.Scanner;

		2) 	creating the Scanner object(variable)
			In order to use the methods from the Scanner class we need to make an object
				Scanner input = new Scanner(System.in);

		3) call the methods
			we can use Scanner methods with the object we made (step 2)
				general syntax: nameOfScanner.method()

	next(): reads a single word
	nextLine(): reads multiple words
		accepts the enter input
		note: causes a problem when used after the other Scanner methods

int num(123) = input.nextInt();
input.nextLine(); \n
String str = input.nextLine();


----
println("Enter values:")
input.nextInt()
String a = input.next();
String b = input.next();
String c = input.next();

berries kiwi milk

__________________________________________________________________
